*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html{
    font-size: 62.5%;
}
body{
    height: 100vh;
    background: #f3f3f3;
    display: flex;
    justify-content: center;
    align-items: center;
}
.item{
    font-size: 2rem;
}
.item-1{
    background-color: #d3c6b8;
}
.item-2{
    background-color: #88847f;
}
.item-3{
    background-color: #374840;
}
.item-4{
    background-color: #376a54;
}
.item-5{
    background-color: #d6d4d3;
}
.item-6{
    background-color: #516464;
}
.item-7{
    background-color: #cfdbdb;
}
.item-8{
    background-color: #b09c98;
}
.item-9{
    background-color: #ddc5af;
}


/* lectur 1 : CSS Grid Introduction _ CSS Grid Tutorial In Hindi Part 1 Introduction to css grid grid-template-rows, grid-template-column & grid-row-gap, grid-column-gap also grid-gap row and column line numbers starts with 1 */


 /* .container{
    width: 1200px;
    background: #efedec;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    display: grid;
    grid-template-columns: 400px 400px 400px;
    grid-template-rows: 200px 200px 200px;

    /* grid-column-gap:10px; 
    /* grid-row-gap:10px;  

    grid-gap: 20px;
}  */


/* CSS Grid FR Unit_ Repeat Function _ Challenge For You _ CSS Grid Tutorial In Hindi Part 2 */

/*container{
    width: 1200px;
    background: #efedec;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    display: grid;

    /*grid-template-columns: repeat(2,1fr) 1fr; 
    /*grid-template-columns: 1fr 1fr 1fr; 

    grid-template-columns: 1fr 2fr 3fr;

    grid-template-rows: repeat(3,200px);
    grid-gap: 20px;
}*/

/* How to Position CSS Grid Items in 3 Ways _ Challenge for You  
1. item1 in place of item3 and vice-versa it will take more works 
2. after that item1 in item9 place*/

/* What is CSS GRID AREA_ Is It Game Changer Or Not_ CSS Grid in Hindi P-4 */


.container{
    width: 1200px;
    background: pink;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    display: grid;

    /* grid-template-columns: repeat(2,1fr) 1fr;  */
    /* grid-template-columns: 300px 300px 300px;  */
    /* grid-template-columns: 1fr 2fr 3fr; */

    /* grid-gap: 20px; */

    /* grid-auto-rows:200px;
    grid-auto-flow: column;
    grid-auto-columns: 200px; */

}

/* 
.item-1{
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row: 3/4;
} */
/*
.item-2{
    grid-row: 1/2;
    grid-column: 2/3;
} */
/*
.item-3{
    /* grid-row-start: 1;
    grid-column-start: 1;
    grid-row-end: 2;
    grid-column-end: 2; 

    /* grid-area: 1/1/2/2; 
    grid-row: 1/2 ;
    grid-column: 1/2 ;
}
*/
/*
.item-9{
    grid-row: 1/2;
} */

/* video-5 */
/* 3 ways to Span CSS Grid Items_ Last One is my Fav -- P-5 */
/* let's expand the grid items
there are 3ways of doing it.
1: the normal by giving the row and column line numbers.
item 2 ke sath : grid-area: 1/2/2/4;
2: bu using the span keyword
3: by using the -1 value to occupy the space till end.

code
.item-5{
    /* grid-area: 2/1/3/4; 
    grid-row: 2/3;
    /* grid-column: 1 / span 3; 
    grid-column: 1 / -1;
}
.item-6{
    grid-row: 3/4;
    grid-column: 1 / -1;
}
*/



/* Differences between Explicit and Implicit Grid In CSS In Hindi 2021 _ P-7 */

/* how to deal with implicit grid? 
grid-auto-rows:200px;
grid-auto-flow: column;
grid-auto-columns: 200px;
*/


/* Master 

Justify-self_ -> 

Justify-items -> inside element move karva mate and 

Justify-content -> (main element move karva mate) main x-axis (start,end,center,space-around,space-between,space-evenly) VS 

Align-content -> (start,end,center,space-around,space-between,space-evenly) 

in CSS GRID in 2021 */

.container{
    justify-content: center;
    /* align-content: center; */
}
/* .item{
    display: grid;
    justify-items: center;
    align-items: center;
} */
/* .item-6{
    display: grid;
    justify-self: center;
    align-self: center;

    /* justify-content: end;
    align-content: start; 
} */

/* -- MIN-CONTENT vs MAX-CONTENT vs MINMAX() in CSS Grid in 2021 */

.container{
    grid-template-columns: repeat(2,200px) minmax(200px,min-content);
    grid-template-rows: repeat(2,MINMAX(min-content,150px));
}
.item-6{
    padding: 5px;
}
